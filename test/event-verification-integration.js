const Web3Utils = require('web3-utils');
const rlp = require('rlp');

// Connect to the Test RPC running
const Web3 = require('web3');
const web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));
//const web3 = new Web3(new Web3.providers.HttpProvider('https://mainnet.infura.io/v3/'));

const DxiTriggerPostSellOrder = artifacts.require("DxiTriggerPostSellOrder");
const EventEmitter = artifacts.require("EventEmitter");

require('chai');

// Blockhash and proof for the EmitEvent 
// txhash: 0x6971f5104a4b7f0575351b1c432f2814c0e306ea29770c8277d8ee19da7617da
// txRoot: 0x21f807836a9178a9cee846ae940221d1bafaba375a1b1bc779eb0596a59bafa7
// receiptRoot: 0x55e76c87416a500025c927cc055d3f5a37bb44e9ea883fa2a6845517181c8da8

// const TEST_BLOCKHASH = "0xf0b3caae3592d0d95ee07adee339d42eb0810e49ee24cc5dd43cec4bf59ceafe";
// const TEST_PROOF = "0xf9037800f8692c85012a05f20083632ea094ceafbfec057d610a7012698eed0b3d1db018636b80847b0cb8391ca0953aa3b5d92e70d2a27beb5c58adcf78cc31b7df2a179f4ead2170bcca7aacd0a04402922c5268cdbe144b9f912136f5ade49d5acdf2b358c4e1f86cd339740b6df872f870822080b86bf8692c85012a05f20083632ea094ceafbfec057d610a7012698eed0b3d1db018636b80847b0cb8391ca0953aa3b5d92e70d2a27beb5c58adcf78cc31b7df2a179f4ead2170bcca7aacd0a04402922c5268cdbe144b9f912136f5ade49d5acdf2b358c4e1f86cd339740b6df9014301825694bf83af83894ceafbfec057d610a7012698eed0b3d1db018636be1a092c7f5cfdd1131c5d84e78d0ecdeb41aee5a28c78681a2e7bc6c30a3645d8c1680f9014ff9014c822080b90146f9014301825694bf83af83894ceafbfec057d610a7012698eed0b3d1db018636be1a092c7f5cfdd1131c5d84e78d0ecdeb41aee5a28c78681a2e7bc6c30a3645d8c1680";
// const TX_ROOT = "0x21f807836a9178a9cee846ae940221d1bafaba375a1b1bc779eb0596a59bafa7";
// const RECEIPT_ROOT = "0x55e76c87416a500025c927cc055d3f5a37bb44e9ea883fa2a6845517181c8da8";

const TESTBLOCK = {
    difficulty: 1902047565321109,
    extraData: '0x505059452d65746865726d696e652d6575312d3132',
    gasLimit: 8000000,
    gasUsed: 597905,
    hash: '0x0a43feaa0dfa26393aa3837d2d3867f0cd0e99c818f941eb74286161e78fdb9b',
    logsBloom: '0x
    miner: '0xea674fdde714fd979de3edf0f56aa9716b898ec8',
    mixHash: '0x8f23ebfc8cbc08287cd134d14517a22f4c457c9073f70f7a55fa0d3bcde59834',
    nonce: '0xcfa18f14031237c2',
    number: 7389620,
    parentHash: '0xe3c794273d547527d95cf873d484623d69ce353f265e4ecec353bf21dac802d4',
    receiptsRoot: '0x61f805dd05e89be123744fcf72638a826d39cc99001c73e0d60392f14be90b2e',
    sha3Uncles: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347',
    size: 2639,
    stateRoot: '0xa828d13e1b65a686bffa07a754f9b1fe0f2cbb1cd14d9e1243f95d33e0de2857',
    timestamp: 1552867705,
    totalDifficulty: 9.503690286005052759224e+21,
    transactions:
    [ '0x3349e4279ee43de527908a57d95868df7deecfa20deddbddb661553dace774f1',
    '0x0500521c86833f5ec7e9ef19a3abc254b7dd39aac37343fc2d6d95a27860ddf1',
    '0xee94fabcb08c060f294e752b41e665afd9828f26213bac502f17274cd361cc84',
    '0xfbe20f28082ccb42e4739c1e1714d75360177f04d535ef0507af8038c826745c',
    '0x1bf5cccff2f0cef1cf7f78f4ad14b4db5ff06d888dbbb9b4269349d56eaa6799',
    '0x99a15448454cba6988e4b0f60244b7fd853bf07c6302dd4f5b43e289c3d14bc3',
    '0xc0fcced7e6dbdf1e271c9f36d6856e0e339766ce5e798546e658620214ab8a3a',
    '0x6bf9f18480e50cf7ed6912850995eb99fa6b7d04b59671049800c4144b057b8f',
    '0x78fa572d1c1e0a20c5e590a2ba6e677c29c6eee7eea0f4216b82d3da9cb90333',
    '0xb6974e596cac47779753e977af2b225b8fe56837e2e0bc1909eb9151f3fec8b4',
    '0xac00cf0c14c3fe902639d365c254f6f4350c127cd9231f7b4d7fec0970c8276b',
    '0x2edba94183c910292de55f73978b79e367648e42dfd8be6e915c32b0e4760432' ],
    transactionsRoot: '0xf69a1676378cb806a8a8efe4ac675ac0bd0f52653c082cf8a5807a25cb964b39',
    uncles: []
}

const blockHeader = [
    TESTBLOCK.parentHash,
    TESTBLOCK.sha3Uncles,
    TESTBLOCK.miner,
    TESTBLOCK.stateRoot,
    TESTBLOCK.transactionsRoot,
    TESTBLOCK.receiptsRoot,
    TESTBLOCK.logsBloom,
    Web3Utils.toBN(TESTBLOCK.difficulty),
    Web3Utils.toBN(TESTBLOCK.number),
    TESTBLOCK.gasLimit,
    TESTBLOCK.gasUsed,
    Web3Utils.toBN(TESTBLOCK.timestamp),
    TESTBLOCK.extraData,
    TESTBLOCK.mixHash,
    TESTBLOCK.nonce
];

const TEST_ENCODED_BLOCK_HEADER = '0x' + rlp.encode(blockHeader).toString('hex');
const TEST_HEADER_HASH = Web3Utils.sha3(TEST_ENCODED_BLOCK_HEADER);

// txHash: 0xb6974e596cac47779753e977af2b225b8fe56837e2e0bc1909eb9151f3fec8b4
const TEST_PROOF = "0xf9069309f86b12847735940082520894a6b202bc362107062948426073a8ff03bb3f6d4e881e35528a005216188026a0be4cf1f5aa32431211ee845150c74c8a58da9d8e74edbca24758d612c6782784a02aaacfb024c90499259a7cbb24438a97233516b83fea7ecd24fe939e4d814dc5f90239f851a0ed5535100a67fae3c068815818ca2adb6b0b68d18a8d63977aed79660ca2eca280808080808080a0bca1afec2141698e6fab6b8bf14ed7a334a7ea735862c3231bddb3665c7107208080808080808080f9017180a09ffd7bd5f6ac16e3cc72ed0d4ae6ca6b10d03256266d999aaa5cdac6b160c746a0d6bbc559bc23e0813bef8bd044fce3f17fe6b2f0f19238d1b014c26ec07a412ca0defc85e0078d8862198513e79861d7d147045f180bb4e4d81d9517b7989e80b9a07824591162a265e3fdac9ef361c9e894b46d1683c1f82a864a15dc28ba934346a0ad5d4f9ca9e14c5300a38a49d4651a1de1dce86a9c4fc3e150f71adaeebb2251a08a996d96494b25f71383430a4b17579cd97d45f62fdb75ec5ea6744475b828ffa0827cc1088f38d9e42c86c1ecc2312f42bddd44afe3c9a1f26ac781cfe7b20da4a04579f396762319c764347ab3fdde29916113f94c3248c234f316ce95aee66f5ba04cebbfb02fa6991c37dd634b9edb9d8fd48ec3e6eae91c1dc33bf6c7dcb2326fa0aa442ebc117ab942d4040f19b898df84365f017150bd7250ded66b1ed0e8afc5a0144f2ee4f04796b0348770f9a69d75895ddd03510c821bb12c435cb6bfaa358a8080808080f87020b86df86b12847735940082520894a6b202bc362107062948426073a8ff03bb3f6d4e881e35528a005216188026a0be4cf1f5aa32431211ee845150c74c8a58da9d8e74edbca24758d612c6782784a02aaacfb024c90499259a7cbb24438a97233516b83fea7ecd24fe939e4d814dc5f90109018307a103bc0f902daf851a01d72fc01323301414ba3af4db41e2d6a6ad1766347f9b3f53d6ce6e5e028509480808080808080a0e58215be848c1293dd381210359d84485553000a82b67410406d183b42adbbdd8080808080808080f9017180a0e3a8d218f4d872c05cb5ee20d7ef31f361217989d68308b49d68a130dfb32e51a0ad5f81c5f1d577405b45abc32c398e3293e094116bc215cd88ad66817b491ceda06052a721968a2205edbaa76ec1cba9cc017d17619ff1683b4acc83e4c9e928dfa0e0135cf7d03d51808773179764a851e6d5f687fa42b02e7300a9c3d21a4e844ba0dcc673ba4b41b8b08ca907110f38bee969ceabe7f17157a5b4dda1f095398fc2a04bf3c79cfd58ff1225ab44aab13f725a39c9b25af5188e21f12423dd78cf1443a0754e2801538500e573d65e9a4989dd533612d8f748925740981637f08588fc3ca0bc1202824c0cc518678f191ce3d63777bf42a3700470ed26b74765fc581e509ea08c91ea6c3bcd38a2e62ccc93dd31919156de94063c3e0c2724701e5d48b2a98da000dae98eb5153074d236e1aa0f33abb0b9a96081159ca0ad03591aed9b8c5a63a094220bafa3905439915ed387faa5f99b6f5c933ac7743562128952357af5f7498080808080f9011020b9010cf90109018307a103bc0";

// WARNING: This is a random address
const CONTRACT_EMITTED_ADDRESS = "0x07a435c7b9df1F331505DdC05165473BEBeAFCdB";

// const block = web3.eth.getBlock(7389620);
// console.log(block);

contract('Check event verification', (accounts) => {
    let eventEmitter;
    let dxiTriggerPostSellOrder;

    beforeEach('setup contract for each test', async function () {
        eventEmitter = await EventEmitter.new();
        dxiTriggerPostSellOrder = await DxiTriggerPostSellOrder.new(eventEmitter.address);
    })

    describe('BlockHeader ', () => {
        it('equals blockhash in header', async () => {
            assert(TEST_HEADER_HASH == TESTBLOCK.hash);
        })
    })

    describe('Check Proofs ', () => {
        it('Successful Proof check', async () => {
            // let tx = await eventEmitter.emitEvent();

            // tx = await dxiTriggerPostSellOrder.verifyAndExecute(TEST_PROOF, TEST_ENCODED_BLOCK_HEADER, CONTRACT_EMITTED_ADDRESS);
            // console.log(tx);
        })
    })
    
})


